	scalar Date
	


	enum Role {
		ADMIN
		REVIEWER
		USER
	}

	type User {
		id: String!
		username: String!
		password: String!
		email: String
		friends: [Friend]
		created: Date
		token: String
	}

	input RegisterUserInput {
		username: String!
		password: String!
		#confirmPassword: String!
		email: String!
	}

	type Query {
		users: [User]
		userById(id: String!): User
	}

	type Mutation {
		LoginUser(email: String!, password: String!): User!
		updateUser(id: String!, username: String!): User
		RegisterUser(user: RegisterUserInput): User!
		RemoveUser(id: String): User
	}
	
  # how to query	
  # addMessageMutation = gql`
  #mutation addMessage($message: MessageInput!) {
  #  addMessage(message: $message) {
  #     id
  #     text
  #   }
  # }
 #`;
	#

